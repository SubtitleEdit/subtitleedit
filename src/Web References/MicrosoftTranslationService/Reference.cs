//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
//
#pragma warning disable 1591

namespace Nikse.SubtitleEdit.MicrosoftTranslationService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_LanguageService", Namespace="http://tempuri.org/")]
    public partial class SoapService : System.Web.Services.Protocols.SoapHttpClientProtocol {

        private System.Threading.SendOrPostCallback AddTranslationOperationCompleted;

        private System.Threading.SendOrPostCallback BreakSentencesOperationCompleted;

        private System.Threading.SendOrPostCallback DetectOperationCompleted;

        private System.Threading.SendOrPostCallback DetectArrayOperationCompleted;

        private System.Threading.SendOrPostCallback GetAppIdTokenOperationCompleted;

        private System.Threading.SendOrPostCallback GetLanguageNamesOperationCompleted;

        private System.Threading.SendOrPostCallback GetLanguagesForSpeakOperationCompleted;

        private System.Threading.SendOrPostCallback GetLanguagesForTranslateOperationCompleted;

        private System.Threading.SendOrPostCallback GetTranslationsOperationCompleted;

        private System.Threading.SendOrPostCallback TranslateOperationCompleted;

        private System.Threading.SendOrPostCallback AddTranslationArrayOperationCompleted;

        private System.Threading.SendOrPostCallback GetTranslationsArrayOperationCompleted;

        private System.Threading.SendOrPostCallback SpeakOperationCompleted;

        private System.Threading.SendOrPostCallback TranslateArrayOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public SoapService() {
            this.Url = global::Nikse.SubtitleEdit.Properties.Settings.Default.SubtitleEdit_MicrosoftTranslationService_SoapService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event AddTranslationCompletedEventHandler AddTranslationCompleted;

        /// <remarks/>
        public event BreakSentencesCompletedEventHandler BreakSentencesCompleted;

        /// <remarks/>
        public event DetectCompletedEventHandler DetectCompleted;

        /// <remarks/>
        public event DetectArrayCompletedEventHandler DetectArrayCompleted;

        /// <remarks/>
        public event GetAppIdTokenCompletedEventHandler GetAppIdTokenCompleted;

        /// <remarks/>
        public event GetLanguageNamesCompletedEventHandler GetLanguageNamesCompleted;

        /// <remarks/>
        public event GetLanguagesForSpeakCompletedEventHandler GetLanguagesForSpeakCompleted;

        /// <remarks/>
        public event GetLanguagesForTranslateCompletedEventHandler GetLanguagesForTranslateCompleted;

        /// <remarks/>
        public event GetTranslationsCompletedEventHandler GetTranslationsCompleted;

        /// <remarks/>
        public event TranslateCompletedEventHandler TranslateCompleted;

        /// <remarks/>
        public event AddTranslationArrayCompletedEventHandler AddTranslationArrayCompleted;

        /// <remarks/>
        public event GetTranslationsArrayCompletedEventHandler GetTranslationsArrayCompleted;

        /// <remarks/>
        public event SpeakCompletedEventHandler SpeakCompleted;

        /// <remarks/>
        public event TranslateArrayCompletedEventHandler TranslateArrayCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/AddTranslation", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTranslation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string originalText, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string translatedText, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string from, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string to, int rating, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ratingSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contentType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string category, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string uri) {
            this.Invoke("AddTranslation", new object[] {
                        appId,
                        originalText,
                        translatedText,
                        from,
                        to,
                        rating,
                        ratingSpecified,
                        contentType,
                        category,
                        user,
                        uri});
        }

        /// <remarks/>
        public void AddTranslationAsync(string appId, string originalText, string translatedText, string from, string to, int rating, bool ratingSpecified, string contentType, string category, string user, string uri) {
            this.AddTranslationAsync(appId, originalText, translatedText, from, to, rating, ratingSpecified, contentType, category, user, uri, null);
        }

        /// <remarks/>
        public void AddTranslationAsync(string appId, string originalText, string translatedText, string from, string to, int rating, bool ratingSpecified, string contentType, string category, string user, string uri, object userState) {
            if ((this.AddTranslationOperationCompleted == null)) {
                this.AddTranslationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTranslationOperationCompleted);
            }
            this.InvokeAsync("AddTranslation", new object[] {
                        appId,
                        originalText,
                        translatedText,
                        from,
                        to,
                        rating,
                        ratingSpecified,
                        contentType,
                        category,
                        user,
                        uri}, this.AddTranslationOperationCompleted, userState);
        }

        private void OnAddTranslationOperationCompleted(object arg) {
            if ((this.AddTranslationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTranslationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/BreakSentences", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public int[] BreakSentences([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string text, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string language) {
            object[] results = this.Invoke("BreakSentences", new object[] {
                        appId,
                        text,
                        language});
            return ((int[])(results[0]));
        }

        /// <remarks/>
        public void BreakSentencesAsync(string appId, string text, string language) {
            this.BreakSentencesAsync(appId, text, language, null);
        }

        /// <remarks/>
        public void BreakSentencesAsync(string appId, string text, string language, object userState) {
            if ((this.BreakSentencesOperationCompleted == null)) {
                this.BreakSentencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBreakSentencesOperationCompleted);
            }
            this.InvokeAsync("BreakSentences", new object[] {
                        appId,
                        text,
                        language}, this.BreakSentencesOperationCompleted, userState);
        }

        private void OnBreakSentencesOperationCompleted(object arg) {
            if ((this.BreakSentencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BreakSentencesCompleted(this, new BreakSentencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/Detect", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Detect([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string text) {
            object[] results = this.Invoke("Detect", new object[] {
                        appId,
                        text});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void DetectAsync(string appId, string text) {
            this.DetectAsync(appId, text, null);
        }

        /// <remarks/>
        public void DetectAsync(string appId, string text, object userState) {
            if ((this.DetectOperationCompleted == null)) {
                this.DetectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetectOperationCompleted);
            }
            this.InvokeAsync("Detect", new object[] {
                        appId,
                        text}, this.DetectOperationCompleted, userState);
        }

        private void OnDetectOperationCompleted(object arg) {
            if ((this.DetectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetectCompleted(this, new DetectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/DetectArray", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] DetectArray([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] texts) {
            object[] results = this.Invoke("DetectArray", new object[] {
                        appId,
                        texts});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void DetectArrayAsync(string appId, string[] texts) {
            this.DetectArrayAsync(appId, texts, null);
        }

        /// <remarks/>
        public void DetectArrayAsync(string appId, string[] texts, object userState) {
            if ((this.DetectArrayOperationCompleted == null)) {
                this.DetectArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetectArrayOperationCompleted);
            }
            this.InvokeAsync("DetectArray", new object[] {
                        appId,
                        texts}, this.DetectArrayOperationCompleted, userState);
        }

        private void OnDetectArrayOperationCompleted(object arg) {
            if ((this.DetectArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetectArrayCompleted(this, new DetectArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/GetAppIdToken", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetAppIdToken([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, int minRatingRead, [System.Xml.Serialization.XmlIgnoreAttribute()] bool minRatingReadSpecified, int maxRatingWrite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxRatingWriteSpecified, int expireSeconds, [System.Xml.Serialization.XmlIgnoreAttribute()] bool expireSecondsSpecified) {
            object[] results = this.Invoke("GetAppIdToken", new object[] {
                        appId,
                        minRatingRead,
                        minRatingReadSpecified,
                        maxRatingWrite,
                        maxRatingWriteSpecified,
                        expireSeconds,
                        expireSecondsSpecified});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAppIdTokenAsync(string appId, int minRatingRead, bool minRatingReadSpecified, int maxRatingWrite, bool maxRatingWriteSpecified, int expireSeconds, bool expireSecondsSpecified) {
            this.GetAppIdTokenAsync(appId, minRatingRead, minRatingReadSpecified, maxRatingWrite, maxRatingWriteSpecified, expireSeconds, expireSecondsSpecified, null);
        }

        /// <remarks/>
        public void GetAppIdTokenAsync(string appId, int minRatingRead, bool minRatingReadSpecified, int maxRatingWrite, bool maxRatingWriteSpecified, int expireSeconds, bool expireSecondsSpecified, object userState) {
            if ((this.GetAppIdTokenOperationCompleted == null)) {
                this.GetAppIdTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppIdTokenOperationCompleted);
            }
            this.InvokeAsync("GetAppIdToken", new object[] {
                        appId,
                        minRatingRead,
                        minRatingReadSpecified,
                        maxRatingWrite,
                        maxRatingWriteSpecified,
                        expireSeconds,
                        expireSecondsSpecified}, this.GetAppIdTokenOperationCompleted, userState);
        }

        private void OnGetAppIdTokenOperationCompleted(object arg) {
            if ((this.GetAppIdTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppIdTokenCompleted(this, new GetAppIdTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/GetLanguageNames", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetLanguageNames([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string locale, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] languageCodes) {
            object[] results = this.Invoke("GetLanguageNames", new object[] {
                        appId,
                        locale,
                        languageCodes});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void GetLanguageNamesAsync(string appId, string locale, string[] languageCodes) {
            this.GetLanguageNamesAsync(appId, locale, languageCodes, null);
        }

        /// <remarks/>
        public void GetLanguageNamesAsync(string appId, string locale, string[] languageCodes, object userState) {
            if ((this.GetLanguageNamesOperationCompleted == null)) {
                this.GetLanguageNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLanguageNamesOperationCompleted);
            }
            this.InvokeAsync("GetLanguageNames", new object[] {
                        appId,
                        locale,
                        languageCodes}, this.GetLanguageNamesOperationCompleted, userState);
        }

        private void OnGetLanguageNamesOperationCompleted(object arg) {
            if ((this.GetLanguageNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLanguageNamesCompleted(this, new GetLanguageNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/GetLanguagesForSpeak", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetLanguagesForSpeak([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId) {
            object[] results = this.Invoke("GetLanguagesForSpeak", new object[] {
                        appId});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void GetLanguagesForSpeakAsync(string appId) {
            this.GetLanguagesForSpeakAsync(appId, null);
        }

        /// <remarks/>
        public void GetLanguagesForSpeakAsync(string appId, object userState) {
            if ((this.GetLanguagesForSpeakOperationCompleted == null)) {
                this.GetLanguagesForSpeakOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLanguagesForSpeakOperationCompleted);
            }
            this.InvokeAsync("GetLanguagesForSpeak", new object[] {
                        appId}, this.GetLanguagesForSpeakOperationCompleted, userState);
        }

        private void OnGetLanguagesForSpeakOperationCompleted(object arg) {
            if ((this.GetLanguagesForSpeakCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLanguagesForSpeakCompleted(this, new GetLanguagesForSpeakCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/GetLanguagesForTranslate", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetLanguagesForTranslate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId) {
            object[] results = this.Invoke("GetLanguagesForTranslate", new object[] {
                        appId});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void GetLanguagesForTranslateAsync(string appId) {
            this.GetLanguagesForTranslateAsync(appId, null);
        }

        /// <remarks/>
        public void GetLanguagesForTranslateAsync(string appId, object userState) {
            if ((this.GetLanguagesForTranslateOperationCompleted == null)) {
                this.GetLanguagesForTranslateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLanguagesForTranslateOperationCompleted);
            }
            this.InvokeAsync("GetLanguagesForTranslate", new object[] {
                        appId}, this.GetLanguagesForTranslateOperationCompleted, userState);
        }

        private void OnGetLanguagesForTranslateOperationCompleted(object arg) {
            if ((this.GetLanguagesForTranslateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLanguagesForTranslateCompleted(this, new GetLanguagesForTranslateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/GetTranslations", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetTranslationsResponse GetTranslations([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string text, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string from, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string to, int maxTranslations, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxTranslationsSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TranslateOptions options) {
            object[] results = this.Invoke("GetTranslations", new object[] {
                        appId,
                        text,
                        from,
                        to,
                        maxTranslations,
                        maxTranslationsSpecified,
                        options});
            return ((GetTranslationsResponse)(results[0]));
        }

        /// <remarks/>
        public void GetTranslationsAsync(string appId, string text, string from, string to, int maxTranslations, bool maxTranslationsSpecified, TranslateOptions options) {
            this.GetTranslationsAsync(appId, text, from, to, maxTranslations, maxTranslationsSpecified, options, null);
        }

        /// <remarks/>
        public void GetTranslationsAsync(string appId, string text, string from, string to, int maxTranslations, bool maxTranslationsSpecified, TranslateOptions options, object userState) {
            if ((this.GetTranslationsOperationCompleted == null)) {
                this.GetTranslationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTranslationsOperationCompleted);
            }
            this.InvokeAsync("GetTranslations", new object[] {
                        appId,
                        text,
                        from,
                        to,
                        maxTranslations,
                        maxTranslationsSpecified,
                        options}, this.GetTranslationsOperationCompleted, userState);
        }

        private void OnGetTranslationsOperationCompleted(object arg) {
            if ((this.GetTranslationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTranslationsCompleted(this, new GetTranslationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/Translate", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Translate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string text, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string from, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string to, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contentType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string category) {
            object[] results = this.Invoke("Translate", new object[] {
                        appId,
                        text,
                        from,
                        to,
                        contentType,
                        category});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void TranslateAsync(string appId, string text, string from, string to, string contentType, string category) {
            this.TranslateAsync(appId, text, from, to, contentType, category, null);
        }

        /// <remarks/>
        public void TranslateAsync(string appId, string text, string from, string to, string contentType, string category, object userState) {
            if ((this.TranslateOperationCompleted == null)) {
                this.TranslateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTranslateOperationCompleted);
            }
            this.InvokeAsync("Translate", new object[] {
                        appId,
                        text,
                        from,
                        to,
                        contentType,
                        category}, this.TranslateOperationCompleted, userState);
        }

        private void OnTranslateOperationCompleted(object arg) {
            if ((this.TranslateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TranslateCompleted(this, new TranslateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/AddTranslationArray", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTranslationArray([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")] Translation[] translations, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string from, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string to, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TranslateOptions options) {
            this.Invoke("AddTranslationArray", new object[] {
                        appId,
                        translations,
                        from,
                        to,
                        options});
        }

        /// <remarks/>
        public void AddTranslationArrayAsync(string appId, Translation[] translations, string from, string to, TranslateOptions options) {
            this.AddTranslationArrayAsync(appId, translations, from, to, options, null);
        }

        /// <remarks/>
        public void AddTranslationArrayAsync(string appId, Translation[] translations, string from, string to, TranslateOptions options, object userState) {
            if ((this.AddTranslationArrayOperationCompleted == null)) {
                this.AddTranslationArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTranslationArrayOperationCompleted);
            }
            this.InvokeAsync("AddTranslationArray", new object[] {
                        appId,
                        translations,
                        from,
                        to,
                        options}, this.AddTranslationArrayOperationCompleted, userState);
        }

        private void OnAddTranslationArrayOperationCompleted(object arg) {
            if ((this.AddTranslationArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTranslationArrayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/GetTranslationsArray", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
        public GetTranslationsResponse[] GetTranslationsArray([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] texts, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string from, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string to, int maxTranslations, [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxTranslationsSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TranslateOptions options) {
            object[] results = this.Invoke("GetTranslationsArray", new object[] {
                        appId,
                        texts,
                        from,
                        to,
                        maxTranslations,
                        maxTranslationsSpecified,
                        options});
            return ((GetTranslationsResponse[])(results[0]));
        }

        /// <remarks/>
        public void GetTranslationsArrayAsync(string appId, string[] texts, string from, string to, int maxTranslations, bool maxTranslationsSpecified, TranslateOptions options) {
            this.GetTranslationsArrayAsync(appId, texts, from, to, maxTranslations, maxTranslationsSpecified, options, null);
        }

        /// <remarks/>
        public void GetTranslationsArrayAsync(string appId, string[] texts, string from, string to, int maxTranslations, bool maxTranslationsSpecified, TranslateOptions options, object userState) {
            if ((this.GetTranslationsArrayOperationCompleted == null)) {
                this.GetTranslationsArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTranslationsArrayOperationCompleted);
            }
            this.InvokeAsync("GetTranslationsArray", new object[] {
                        appId,
                        texts,
                        from,
                        to,
                        maxTranslations,
                        maxTranslationsSpecified,
                        options}, this.GetTranslationsArrayOperationCompleted, userState);
        }

        private void OnGetTranslationsArrayOperationCompleted(object arg) {
            if ((this.GetTranslationsArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTranslationsArrayCompleted(this, new GetTranslationsArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/Speak", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Speak([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string text, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string language, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string format) {
            object[] results = this.Invoke("Speak", new object[] {
                        appId,
                        text,
                        language,
                        format});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SpeakAsync(string appId, string text, string language, string format) {
            this.SpeakAsync(appId, text, language, format, null);
        }

        /// <remarks/>
        public void SpeakAsync(string appId, string text, string language, string format, object userState) {
            if ((this.SpeakOperationCompleted == null)) {
                this.SpeakOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpeakOperationCompleted);
            }
            this.InvokeAsync("Speak", new object[] {
                        appId,
                        text,
                        language,
                        format}, this.SpeakOperationCompleted, userState);
        }

        private void OnSpeakOperationCompleted(object arg) {
            if ((this.SpeakCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpeakCompleted(this, new SpeakCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.microsofttranslator.com/V2/LanguageService/TranslateArray", RequestNamespace="http://api.microsofttranslator.com/V2", ResponseNamespace="http://api.microsofttranslator.com/V2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
        public TranslateArrayResponse[] TranslateArray([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string appId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] texts, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string from, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string to, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TranslateOptions options) {
            object[] results = this.Invoke("TranslateArray", new object[] {
                        appId,
                        texts,
                        from,
                        to,
                        options});
            return ((TranslateArrayResponse[])(results[0]));
        }

        /// <remarks/>
        public void TranslateArrayAsync(string appId, string[] texts, string from, string to, TranslateOptions options) {
            this.TranslateArrayAsync(appId, texts, from, to, options, null);
        }

        /// <remarks/>
        public void TranslateArrayAsync(string appId, string[] texts, string from, string to, TranslateOptions options, object userState) {
            if ((this.TranslateArrayOperationCompleted == null)) {
                this.TranslateArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTranslateArrayOperationCompleted);
            }
            this.InvokeAsync("TranslateArray", new object[] {
                        appId,
                        texts,
                        from,
                        to,
                        options}, this.TranslateArrayOperationCompleted, userState);
        }

        private void OnTranslateArrayOperationCompleted(object arg) {
            if ((this.TranslateArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TranslateArrayCompleted(this, new TranslateArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null)
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class TranslateOptions {

        private string categoryField;

        private string contentTypeField;

        private string reservedFlagsField;

        private string stateField;

        private string uriField;

        private string userField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReservedFlags {
            get {
                return this.reservedFlagsField;
            }
            set {
                this.reservedFlagsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class TranslateArrayResponse {

        private string errorField;

        private string fromField;

        private int[] originalTextSentenceLengthsField;

        private string stateField;

        private string translatedTextField;

        private int[] translatedTextSentenceLengthsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public int[] OriginalTextSentenceLengths {
            get {
                return this.originalTextSentenceLengthsField;
            }
            set {
                this.originalTextSentenceLengthsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TranslatedText {
            get {
                return this.translatedTextField;
            }
            set {
                this.translatedTextField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public int[] TranslatedTextSentenceLengths {
            get {
                return this.translatedTextSentenceLengthsField;
            }
            set {
                this.translatedTextSentenceLengthsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class Translation {

        private string originalTextField;

        private int ratingField;

        private bool ratingFieldSpecified;

        private int sequenceField;

        private bool sequenceFieldSpecified;

        private string translatedTextField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OriginalText {
            get {
                return this.originalTextField;
            }
            set {
                this.originalTextField = value;
            }
        }

        /// <remarks/>
        public int Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RatingSpecified {
            get {
                return this.ratingFieldSpecified;
            }
            set {
                this.ratingFieldSpecified = value;
            }
        }

        /// <remarks/>
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SequenceSpecified {
            get {
                return this.sequenceFieldSpecified;
            }
            set {
                this.sequenceFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TranslatedText {
            get {
                return this.translatedTextField;
            }
            set {
                this.translatedTextField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class TranslationMatch {

        private int countField;

        private string errorField;

        private int matchDegreeField;

        private string matchedOriginalTextField;

        private int ratingField;

        private string translatedTextField;

        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }

        /// <remarks/>
        public int MatchDegree {
            get {
                return this.matchDegreeField;
            }
            set {
                this.matchDegreeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MatchedOriginalText {
            get {
                return this.matchedOriginalTextField;
            }
            set {
                this.matchedOriginalTextField = value;
            }
        }

        /// <remarks/>
        public int Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TranslatedText {
            get {
                return this.translatedTextField;
            }
            set {
                this.translatedTextField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.MT.Web.Service.V2")]
    public partial class GetTranslationsResponse {

        private string fromField;

        private string stateField;

        private TranslationMatch[] translationsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public TranslationMatch[] Translations {
            get {
                return this.translationsField;
            }
            set {
                this.translationsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddTranslationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BreakSentencesCompletedEventHandler(object sender, BreakSentencesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BreakSentencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal BreakSentencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DetectCompletedEventHandler(object sender, DetectCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal DetectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DetectArrayCompletedEventHandler(object sender, DetectArrayCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetectArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal DetectArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAppIdTokenCompletedEventHandler(object sender, GetAppIdTokenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppIdTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal GetAppIdTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLanguageNamesCompletedEventHandler(object sender, GetLanguageNamesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLanguageNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal GetLanguageNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLanguagesForSpeakCompletedEventHandler(object sender, GetLanguagesForSpeakCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLanguagesForSpeakCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal GetLanguagesForSpeakCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetLanguagesForTranslateCompletedEventHandler(object sender, GetLanguagesForTranslateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLanguagesForTranslateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal GetLanguagesForTranslateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTranslationsCompletedEventHandler(object sender, GetTranslationsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTranslationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal GetTranslationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public GetTranslationsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTranslationsResponse)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void TranslateCompletedEventHandler(object sender, TranslateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TranslateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal TranslateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddTranslationArrayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetTranslationsArrayCompletedEventHandler(object sender, GetTranslationsArrayCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTranslationsArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal GetTranslationsArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public GetTranslationsResponse[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTranslationsResponse[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SpeakCompletedEventHandler(object sender, SpeakCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpeakCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal SpeakCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void TranslateArrayCompletedEventHandler(object sender, TranslateArrayCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TranslateArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {

        private object[] results;

        internal TranslateArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState) {
            this.results = results;
        }

        /// <remarks/>
        public TranslateArrayResponse[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TranslateArrayResponse[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591