//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
//
#pragma warning disable 1591

namespace Nikse.SubtitleEdit.SeNetworkService
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "SeServiceSoap", Namespace = "http://tempuri.org/")]
    public partial class SeService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback StartOperationCompleted;

        private System.Threading.SendOrPostCallback JoinOperationCompleted;

        private System.Threading.SendOrPostCallback LeaveOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteLinesOperationCompleted;

        private System.Threading.SendOrPostCallback InsertLineOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateLineOperationCompleted;

        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;

        private System.Threading.SendOrPostCallback GetUpdatesOperationCompleted;

        private System.Threading.SendOrPostCallback GetSubtitleOperationCompleted;

        private System.Threading.SendOrPostCallback GetOriginalSubtitleOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public SeService()
        {
            this.Url = global::Nikse.SubtitleEdit.Properties.Settings.Default.SubtitleEdit_SeNetworkService_SeService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event StartCompletedEventHandler StartCompleted;

        /// <remarks/>
        public event JoinCompletedEventHandler JoinCompleted;

        /// <remarks/>
        public event LeaveCompletedEventHandler LeaveCompleted;

        /// <remarks/>
        public event DeleteLinesCompletedEventHandler DeleteLinesCompleted;

        /// <remarks/>
        public event InsertLineCompletedEventHandler InsertLineCompleted;

        /// <remarks/>
        public event UpdateLineCompletedEventHandler UpdateLineCompleted;

        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;

        /// <remarks/>
        public event GetUpdatesCompletedEventHandler GetUpdatesCompleted;

        /// <remarks/>
        public event GetSubtitleCompletedEventHandler GetSubtitleCompleted;

        /// <remarks/>
        public event GetOriginalSubtitleCompletedEventHandler GetOriginalSubtitleCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Start", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SeUser Start(string sessionKey, string userName, SeSequence[] subtitle, SeSequence[] originalSubtitle, string fileName, out string message)
        {
            object[] results = this.Invoke("Start", new object[] {
                        sessionKey,
                        userName,
                        subtitle,
                        originalSubtitle,
                        fileName});
            message = ((string)(results[1]));
            return ((SeUser)(results[0]));
        }

        /// <remarks/>
        public void StartAsync(string sessionKey, string userName, SeSequence[] subtitle, SeSequence[] originalSubtitle, string fileName)
        {
            this.StartAsync(sessionKey, userName, subtitle, originalSubtitle, fileName, null);
        }

        /// <remarks/>
        public void StartAsync(string sessionKey, string userName, SeSequence[] subtitle, SeSequence[] originalSubtitle, string fileName, object userState)
        {
            if ((this.StartOperationCompleted == null))
            {
                this.StartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartOperationCompleted);
            }
            this.InvokeAsync("Start", new object[] {
                        sessionKey,
                        userName,
                        subtitle,
                        originalSubtitle,
                        fileName}, this.StartOperationCompleted, userState);
        }

        private void OnStartOperationCompleted(object arg)
        {
            if ((this.StartCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartCompleted(this, new StartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Join", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SeUser[] Join(string sessionId, string userName, out string message)
        {
            object[] results = this.Invoke("Join", new object[] {
                        sessionId,
                        userName});
            message = ((string)(results[1]));
            return ((SeUser[])(results[0]));
        }

        /// <remarks/>
        public void JoinAsync(string sessionId, string userName)
        {
            this.JoinAsync(sessionId, userName, null);
        }

        /// <remarks/>
        public void JoinAsync(string sessionId, string userName, object userState)
        {
            if ((this.JoinOperationCompleted == null))
            {
                this.JoinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJoinOperationCompleted);
            }
            this.InvokeAsync("Join", new object[] {
                        sessionId,
                        userName}, this.JoinOperationCompleted, userState);
        }

        private void OnJoinOperationCompleted(object arg)
        {
            if ((this.JoinCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JoinCompleted(this, new JoinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Leave", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Leave(string sessionId, string userName)
        {
            this.Invoke("Leave", new object[] {
                        sessionId,
                        userName});
        }

        /// <remarks/>
        public void LeaveAsync(string sessionId, string userName)
        {
            this.LeaveAsync(sessionId, userName, null);
        }

        /// <remarks/>
        public void LeaveAsync(string sessionId, string userName, object userState)
        {
            if ((this.LeaveOperationCompleted == null))
            {
                this.LeaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaveOperationCompleted);
            }
            this.InvokeAsync("Leave", new object[] {
                        sessionId,
                        userName}, this.LeaveOperationCompleted, userState);
        }

        private void OnLeaveOperationCompleted(object arg)
        {
            if ((this.LeaveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLines", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLines(string sessionId, int[] indices, SeUser user)
        {
            object[] results = this.Invoke("DeleteLines", new object[] {
                        sessionId,
                        indices,
                        user});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void DeleteLinesAsync(string sessionId, int[] indices, SeUser user)
        {
            this.DeleteLinesAsync(sessionId, indices, user, null);
        }

        /// <remarks/>
        public void DeleteLinesAsync(string sessionId, int[] indices, SeUser user, object userState)
        {
            if ((this.DeleteLinesOperationCompleted == null))
            {
                this.DeleteLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLinesOperationCompleted);
            }
            this.InvokeAsync("DeleteLines", new object[] {
                        sessionId,
                        indices,
                        user}, this.DeleteLinesOperationCompleted, userState);
        }

        private void OnDeleteLinesOperationCompleted(object arg)
        {
            if ((this.DeleteLinesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLinesCompleted(this, new DeleteLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLine", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertLine(string sessionId, int index, int startMilliseconds, int endMilliseconds, string text, SeUser user)
        {
            object[] results = this.Invoke("InsertLine", new object[] {
                        sessionId,
                        index,
                        startMilliseconds,
                        endMilliseconds,
                        text,
                        user});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void InsertLineAsync(string sessionId, int index, int startMilliseconds, int endMilliseconds, string text, SeUser user)
        {
            this.InsertLineAsync(sessionId, index, startMilliseconds, endMilliseconds, text, user, null);
        }

        /// <remarks/>
        public void InsertLineAsync(string sessionId, int index, int startMilliseconds, int endMilliseconds, string text, SeUser user, object userState)
        {
            if ((this.InsertLineOperationCompleted == null))
            {
                this.InsertLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLineOperationCompleted);
            }
            this.InvokeAsync("InsertLine", new object[] {
                        sessionId,
                        index,
                        startMilliseconds,
                        endMilliseconds,
                        text,
                        user}, this.InsertLineOperationCompleted, userState);
        }

        private void OnInsertLineOperationCompleted(object arg)
        {
            if ((this.InsertLineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLineCompleted(this, new InsertLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLine", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLine(string sessionId, int index, SeSequence sequence, SeUser user)
        {
            object[] results = this.Invoke("UpdateLine", new object[] {
                        sessionId,
                        index,
                        sequence,
                        user});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateLineAsync(string sessionId, int index, SeSequence sequence, SeUser user)
        {
            this.UpdateLineAsync(sessionId, index, sequence, user, null);
        }

        /// <remarks/>
        public void UpdateLineAsync(string sessionId, int index, SeSequence sequence, SeUser user, object userState)
        {
            if ((this.UpdateLineOperationCompleted == null))
            {
                this.UpdateLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLineOperationCompleted);
            }
            this.InvokeAsync("UpdateLine", new object[] {
                        sessionId,
                        index,
                        sequence,
                        user}, this.UpdateLineOperationCompleted, userState);
        }

        private void OnUpdateLineOperationCompleted(object arg)
        {
            if ((this.UpdateLineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLineCompleted(this, new UpdateLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMessage(string sessionId, string text, SeUser user)
        {
            object[] results = this.Invoke("SendMessage", new object[] {
                        sessionId,
                        text,
                        user});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SendMessageAsync(string sessionId, string text, SeUser user)
        {
            this.SendMessageAsync(sessionId, text, user, null);
        }

        /// <remarks/>
        public void SendMessageAsync(string sessionId, string text, SeUser user, object userState)
        {
            if ((this.SendMessageOperationCompleted == null))
            {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        sessionId,
                        text,
                        user}, this.SendMessageOperationCompleted, userState);
        }

        private void OnSendMessageOperationCompleted(object arg)
        {
            if ((this.SendMessageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new SendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdates", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SeUpdate[] GetUpdates(string sessionId, string userName, System.DateTime lastUpdateTime, out string message, out System.DateTime newUpdateTime, out int numberOfLines)
        {
            object[] results = this.Invoke("GetUpdates", new object[] {
                        sessionId,
                        userName,
                        lastUpdateTime});
            message = ((string)(results[1]));
            newUpdateTime = ((System.DateTime)(results[2]));
            numberOfLines = ((int)(results[3]));
            return ((SeUpdate[])(results[0]));
        }

        /// <remarks/>
        public void GetUpdatesAsync(string sessionId, string userName, System.DateTime lastUpdateTime)
        {
            this.GetUpdatesAsync(sessionId, userName, lastUpdateTime, null);
        }

        /// <remarks/>
        public void GetUpdatesAsync(string sessionId, string userName, System.DateTime lastUpdateTime, object userState)
        {
            if ((this.GetUpdatesOperationCompleted == null))
            {
                this.GetUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetUpdates", new object[] {
                        sessionId,
                        userName,
                        lastUpdateTime}, this.GetUpdatesOperationCompleted, userState);
        }

        private void OnGetUpdatesOperationCompleted(object arg)
        {
            if ((this.GetUpdatesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatesCompleted(this, new GetUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubtitle", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SeSequence[] GetSubtitle(string sessionId, out string fileName, out System.DateTime updateTime)
        {
            object[] results = this.Invoke("GetSubtitle", new object[] {
                        sessionId});
            fileName = ((string)(results[1]));
            updateTime = ((System.DateTime)(results[2]));
            return ((SeSequence[])(results[0]));
        }

        /// <remarks/>
        public void GetSubtitleAsync(string sessionId)
        {
            this.GetSubtitleAsync(sessionId, null);
        }

        /// <remarks/>
        public void GetSubtitleAsync(string sessionId, object userState)
        {
            if ((this.GetSubtitleOperationCompleted == null))
            {
                this.GetSubtitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubtitleOperationCompleted);
            }
            this.InvokeAsync("GetSubtitle", new object[] {
                        sessionId}, this.GetSubtitleOperationCompleted, userState);
        }

        private void OnGetSubtitleOperationCompleted(object arg)
        {
            if ((this.GetSubtitleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubtitleCompleted(this, new GetSubtitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOriginalSubtitle", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SeSequence[] GetOriginalSubtitle(string sessionId)
        {
            object[] results = this.Invoke("GetOriginalSubtitle", new object[] {
                        sessionId});
            return ((SeSequence[])(results[0]));
        }

        /// <remarks/>
        public void GetOriginalSubtitleAsync(string sessionId)
        {
            this.GetOriginalSubtitleAsync(sessionId, null);
        }

        /// <remarks/>
        public void GetOriginalSubtitleAsync(string sessionId, object userState)
        {
            if ((this.GetOriginalSubtitleOperationCompleted == null))
            {
                this.GetOriginalSubtitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOriginalSubtitleOperationCompleted);
            }
            this.InvokeAsync("GetOriginalSubtitle", new object[] {
                        sessionId}, this.GetOriginalSubtitleOperationCompleted, userState);
        }

        private void OnGetOriginalSubtitleOperationCompleted(object arg)
        {
            if ((this.GetOriginalSubtitleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOriginalSubtitleCompleted(this, new GetOriginalSubtitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class SeSequence
    {

        private int indexField;

        private int startMillisecondsField;

        private int endMillisecondsField;

        private string textField;

        /// <remarks/>
        public int Index
        {
            get
            {
                return this.indexField;
            }
            set
            {
                this.indexField = value;
            }
        }

        /// <remarks/>
        public int StartMilliseconds
        {
            get
            {
                return this.startMillisecondsField;
            }
            set
            {
                this.startMillisecondsField = value;
            }
        }

        /// <remarks/>
        public int EndMilliseconds
        {
            get
            {
                return this.endMillisecondsField;
            }
            set
            {
                this.endMillisecondsField = value;
            }
        }

        /// <remarks/>
        public string Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                this.textField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class SeUpdate
    {

        private System.DateTime timeField;

        private SeUser userField;

        private int indexField;

        private int startMillisecondsField;

        private int endMillisecondsField;

        private string textField;

        private string actionField;

        /// <remarks/>
        public System.DateTime Time
        {
            get
            {
                return this.timeField;
            }
            set
            {
                this.timeField = value;
            }
        }

        /// <remarks/>
        public SeUser User
        {
            get
            {
                return this.userField;
            }
            set
            {
                this.userField = value;
            }
        }

        /// <remarks/>
        public int Index
        {
            get
            {
                return this.indexField;
            }
            set
            {
                this.indexField = value;
            }
        }

        /// <remarks/>
        public int StartMilliseconds
        {
            get
            {
                return this.startMillisecondsField;
            }
            set
            {
                this.startMillisecondsField = value;
            }
        }

        /// <remarks/>
        public int EndMilliseconds
        {
            get
            {
                return this.endMillisecondsField;
            }
            set
            {
                this.endMillisecondsField = value;
            }
        }

        /// <remarks/>
        public string Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                this.textField = value;
            }
        }

        /// <remarks/>
        public string Action
        {
            get
            {
                return this.actionField;
            }
            set
            {
                this.actionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class SeUser
    {
        private string userNameField;

        private string ipField;

        private System.DateTime lastActivityField;

        /// <remarks/>
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }

        /// <remarks/>
        public string Ip
        {
            get
            {
                return this.ipField;
            }
            set
            {
                this.ipField = value;
            }
        }

        /// <remarks/>
        public System.DateTime LastActivity
        {
            get
            {
                return this.lastActivityField;
            }
            set
            {
                this.lastActivityField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void StartCompletedEventHandler(object sender, StartCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal StartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SeUser Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SeUser)(this.results[0]));
            }
        }

        /// <remarks/>
        public string message
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void JoinCompletedEventHandler(object sender, JoinCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JoinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal JoinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SeUser[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SeUser[])(this.results[0]));
            }
        }

        /// <remarks/>
        public string message
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LeaveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteLinesCompletedEventHandler(object sender, DeleteLinesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal DeleteLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void InsertLineCompletedEventHandler(object sender, InsertLineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal InsertLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateLineCompletedEventHandler(object sender, UpdateLineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal UpdateLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SendMessageCompletedEventHandler(object sender, SendMessageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal SendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUpdatesCompletedEventHandler(object sender, GetUpdatesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal GetUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SeUpdate[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SeUpdate[])(this.results[0]));
            }
        }

        /// <remarks/>
        public string message
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public System.DateTime newUpdateTime
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }

        /// <remarks/>
        public int numberOfLines
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSubtitleCompletedEventHandler(object sender, GetSubtitleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubtitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSubtitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SeSequence[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SeSequence[])(this.results[0]));
            }
        }

        /// <remarks/>
        public string fileName
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public System.DateTime updateTime
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetOriginalSubtitleCompletedEventHandler(object sender, GetOriginalSubtitleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOriginalSubtitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal GetOriginalSubtitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SeSequence[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SeSequence[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591